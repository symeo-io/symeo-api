AWSTemplateFormatVersion: '2010-09-09'

Description: Symeo API - IAM Roles

Parameters:
  Env:
    Type: String
    Default: staging

Resources:
  SymeoApiAutoScaleRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub symeo-api-autoscale-role-${Env}
      Path: /
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        -
          Effect: "Allow"
          Principal:
            Service:
            - "application-autoscaling.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceAutoscaleRole

  SymeoApiECSExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub symeo-api-ecs-execution-role-${Env}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "ecs-tasks.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
      -
          PolicyName: !Sub S3Access-${Env}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "s3:*"
                Resource:
                  - "*"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  SymeoApiTaskRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub symeo-api-task-role-${Env}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        -
          Effect: "Allow"
          Principal:
            Service:
            - "ecs-tasks.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      Path: /
      Policies:
      -
        PolicyName: !Sub LogAuthorization-${Env}
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          -
            Effect: "Allow"
            Action:
            - "logs:CreateLogGroup"
            - "logs:CreateLogStream"
            - "logs:PutLogEvents"
            Resource: "*"
      -
        PolicyName: !Sub S3Access-${Env}
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          -
            Effect: "Allow"
            Action:
            - "s3:*"
            Resource:
            - "*"
      -
        PolicyName: !Sub SecretManagerAccess-${Env}
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Effect: "Allow"
              Action:
                - "secretsmanager:GetSecretValue"
                - "secretsmanager:CreateSecret"
                - "secretsmanager:PutSecretValue"
                - "secretsmanager:DeleteSecret"
                - "secretsmanager:ListSecretVersionIds"
              Resource:
                - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*"

Outputs:
  SymeoApiAutoScaleRole:
    Value: !Ref SymeoApiAutoScaleRole
  SymeoApiECSExecutionRole:
    Value: !Ref SymeoApiECSExecutionRole
  SymeoApiTaskRole:
    Value: !Ref SymeoApiTaskRole
